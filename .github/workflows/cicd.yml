name: CI/CD Workflow

on:
  push:
    branches:
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint and save results
        run: npm run lint > eslint-report.txt

      - name: Upload ESLint results
        uses: actions/upload-artifact@v3
        with:
          name: eslint-results
          path: eslint-report.txt

      - name: Run Jest tests
        run: npm test -- --coverage

      - name: Upload Jest coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      - name: Upload Jest test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.html

  build:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  build-and-publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Extract tag name
        id: extract-tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Build and push the image
        run: |
          docker login --username max-pfi --password ${{ secrets.GH_PAT }} ghcr.io
          docker build -t ghcr.io/max-pfi/contdel:${{ env.tag }} .
          docker push ghcr.io/max-pfi/contdel:${{ env.tag }}
